@page "/resetpassword"
@layout MainLayout

@using DsrProject.Web.Pages.Auth.ForgotPwd
@using Microsoft.AspNetCore.WebUtilities;
@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudGrid Justify="Justify.Center" Class="pa-10">
    <MudItem xs="7" sm="4">
        <MudPaper Class="pa-4">
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">

                <MudText Typo="Typo.h4" GutterBottom="true" Class="mb-3">Enter new password and confirm</MudText>

                <MudAlert Severity="Severity.Error" Class="@(ShowErrors ? "mb-3 d-block" : "d-none")">
                    @Error
                    <br />
                    @ErrorDetail
                </MudAlert>
                <InputText @bind-Value=@Email></InputText>
                <InputText @bind-Value=@Token></InputText>

                <MudTextField @bind-Value="model.Password" For="@(() => model.Password)"
                              Label="Password"
                              HelperText="Input your password"
                              InputType="@PasswordInput"
                              Adornment="Adornment.End"
                              AdornmentIcon="@PasswordInputIcon"
                              Required="true"
                              RequiredError="Password is required!"
                              OnAdornmentClick="TogglePasswordVisibility" />

                <MudTextField @bind-Value="model.ConfirmPassword" For="@(() => model.ConfirmPassword)"
                              Label="CofirmPassword"
                              HelperText="Confirm new password"
                              InputType="@PasswordInput"
                              Adornment="Adornment.End"
                              AdornmentIcon="@PasswordInputIcon"
                              Required="true"
                              RequiredError="ConfirmPassword is required!"
                              OnAdornmentClick="TogglePasswordVisibility" />


                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           Size="Size.Large"
                           ButtonType="ButtonType.Submit">Send</MudButton>
            </EditForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool success;
    MudForm form;
    private string? Email;
    private string? Token;

    private ResetPasswordModel model = new ResetPasswordModel();

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private bool ShowErrors;
    private string Error;
    private string ErrorDetail;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    private async Task OnValidSubmit()
    {
        ShowErrors = false;
        Error = "";
        ErrorDetail = "";

        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var queryString = QueryHelpers.ParseQuery(uri.Query);
        if(queryString.TryGetValue("email", out var email))
        {
            Email = email;
        }
        if (queryString.TryGetValue("token", out var token))
        {
            Token=token;
        }
        model.Email = Email;
        model.Token = Token;
        var result = await AuthService.ResetForgotPassword(model);

        if (result)
        {
            Snackbar.Add("Password changed");
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Snackbar.Add("Something is wrong");
        }
    }
}
